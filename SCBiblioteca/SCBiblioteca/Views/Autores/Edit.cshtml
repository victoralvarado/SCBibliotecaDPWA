@model SCBiblioteca.Models.Autor

@{
    String sesion = (String)(System.Web.HttpContext.Current.Session["UserSesion"]);
}

@if (@System.Web.HttpContext.Current.Session["UserSesion"] != null && sesion.Equals("Administrador"))
{
    {
        ViewBag.Title = "Edit";
    }
    <div class="container my-5" style="padding:16px;">
        <h2>Editar</h2>
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Autor</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.IdAutor)

                <div class="form-group">
                    @Html.LabelFor(model => model.Autor1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Autor1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Autor1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Guardar" class="btn btn-success" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Regresar a la lista", "Index")
        </div>
    </div>
}
else
{
    {
        ViewBag.Title = "NotFound";
    }
    @RenderPage("~/Views/Home/NotFound.cshtml");
}
<script src="~/Scripts/jquery-3.5.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
