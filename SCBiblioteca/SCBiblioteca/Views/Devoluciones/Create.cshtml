@model SCBiblioteca.Models.Devolucion

@{
    String sesion = (String)(System.Web.HttpContext.Current.Session["UserSesion"]);
}

@if (@System.Web.HttpContext.Current.Session["UserSesion"] != null && (sesion.Equals("Administrador") || sesion.Equals("Atencion") || sesion.Equals("Bibliotecario")))
{
    ViewBag.Title = "Create";
    string nombreCompleto = (string)(System.Web.HttpContext.Current.Session["PrestamoNombreCompleto"]);
    string cantidadLibros = (string)(System.Web.HttpContext.Current.Session["PrestamoCantidadLibros"]);
    string idUsuario = (string)(System.Web.HttpContext.Current.Session["PrestamoIdUsuario"]);
    string idLibro = (string)(System.Web.HttpContext.Current.Session["PrestamoIdLibro"]);
    string tituloLibro = (string)(System.Web.HttpContext.Current.Session["PrestamoTitulo"]);
    string fechaSolicitud = (string)(System.Web.HttpContext.Current.Session["PrestamoFechaSolicitud"]);
    string[] t = System.Text.RegularExpressions.Regex.Replace(tituloLibro.ToUpper().Normalize(System.Text.NormalizationForm.FormD), @"[^a-zA-z0-9 ]+", "").Split(' ');
    string tt = "";
    foreach (var str in t)
    {
        tt += str;
    }

    string comprobante = "U" + idUsuario + "L" + idLibro + "-S-" + ViewBag.IdSol;

    <div class="container my-5" style="padding:16px;">
        <h2>Agregar</h2>


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Devolucion</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.FechaDevolucion, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FechaDevolucion, new { htmlAttributes = new { @class = "form-control", type = "datetime-local" } })
                        @Html.ValidationMessageFor(model => model.FechaDevolucion, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Observaciones, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Observaciones, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Observaciones, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IdPrestamo, "IdPrestamo", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="text" value="@ViewBag.IdPrestamo" name="IdPrestamo" readonly class="form-control">
                        <input type="hidden" value="@ViewBag.IdSol" name="idSolicitud" readonly class="form-control">
                        <input type="hidden" value="@ViewBag.Can" name="cantidad" readonly class="form-control">
                        <input type="hidden" value="@comprobante" name="comprobante" readonly class="form-control">
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Agregar" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Regresar a la lista", "Index")
        </div>
    </div>
}
else
{
    {
        ViewBag.Title = "NotFound";
    }
    @RenderPage("~/Views/Home/NotFound.cshtml");
}
<script src="~/Scripts/jquery-3.5.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>